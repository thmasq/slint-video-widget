import { Slider, VerticalBox, HorizontalBox } from "std-widgets.slint";

export component VideoPlayer inherits Window {
    title: "Video Player";
    preferred-width: 1280px;
    preferred-height: 720px;
    background: #000;

    // === PROPERTIES ===
    in-out property <image> video_frame;
    in-out property <bool> is_playing: false;
    in-out property <bool> is_muted: false;
    in-out property <bool> is_fullscreen: false;
    in-out property <float> video_position: 0.0;
    in-out property <float> video_duration: 100.0;
    in-out property <float> current_time: 0.0;
    in-out property <float> volume: 1.0;

    // === CALLBACKS ===
    callback play_pause_clicked();
    callback seek_changed(float);
    callback volume_changed(float);
    callback mute_clicked();
    callback fullscreen_clicked();

    // === HELPERS ===
    pure function format_time(seconds: float) -> string {
        let mins = floor(seconds / 60);
        let secs = floor(mod(seconds, 60));
        return mins + ":" + (secs < 10 ? "0" : "") + secs;
    }

    // === INTERNAL STATE ===
    property <bool> show_controls: true;

    hide_timer := Timer {
        running: false;
        interval: 2000ms;
        triggered => {
            root.show_controls = false;
        }
    }

    VerticalBox {
        Rectangle {
            vertical-stretch: 1;
            background: #000;

            // --- Video Frame ---
            Image {
                width: 100%;
                height: 100%;
                source: video_frame;
                image-fit: contain;
            }

            // --- Overlay ---
            overlay := Rectangle {
                width: 100%;
                height: 100%;
                background: transparent;

                // Detect hover anywhere over video or controls
                TouchArea {
                    width: 100%;
                    height: 100%;

                    // When hovering, reset timer to keep controls visible
                    moved => {
                        root.show_controls = true;
                        hide_timer.restart();
                    }

                    // Also trigger on press (optional)
                    clicked => {
                        root.show_controls = true;
                        hide_timer.restart();
                    }

                    mouse-cursor: default;
                }

                // --- Controls ---
                controls_container := Rectangle {
                    width: 100%;
                    height: 90px;
                    y: parent.height - self.height;
                    background: @linear-gradient(180deg, #00000000 0%, #000000CC 100%);
                    opacity: root.show_controls ? 1.0 : 0.0;

                    animate opacity {
                        duration: 300ms;
                        easing: ease-in-out;
                    }

                    VerticalBox {
                        padding: 10px;
                        spacing: 6px;

                        // --- Seek Bar ---
                        HorizontalBox {
                            spacing: 10px;
                            alignment: center;

                            Text {
                                text: format_time(current_time);
                                color: white;
                                font-size: 12px;
                                vertical-alignment: center;
                            }

                            seek_slider := Slider {
                                width: 90%;
                                minimum: 0;
                                maximum: video_duration;
                                value: current_time;
                                changed => { seek_changed(self.value); }
                            }

                            Text {
                                text: format_time(video_duration);
                                color: white;
                                font-size: 12px;
                                vertical-alignment: center;
                            }
                        }

                        // --- Control Buttons ---
                        HorizontalBox {
                            spacing: 15px;
                            alignment: center;

                            // Play / Pause
                            Rectangle {
                                width: 36px;
                                height: 36px;

                                TouchArea {
                                    width: 100%;
                                    height: 100%;
                                    clicked => { play_pause_clicked(); }
                                    mouse-cursor: pointer;
                                }

                                Image {
                                    width: 100%;
                                    height: 100%;
                                    source: is_playing
                                        ? @image-url("assets/pause.svg")
                                        : @image-url("assets/play.svg");
                                }
                            }

                            // Mute / Unmute
                            Rectangle {
                                width: 32px;
                                height: 32px;

                                TouchArea {
                                    width: 100%;
                                    height: 100%;
                                    clicked => { mute_clicked(); }
                                    mouse-cursor: pointer;
                                }

                                Image {
                                    width: 100%;
                                    height: 100%;
                                    source: is_muted
                                        ? @image-url("assets/unmute.svg")
                                        : @image-url("assets/mute.svg");
                                }
                            }

                            // Volume Slider
                            volume_slider := Slider {
                                width: 100px;
                                minimum: 0;
                                maximum: 100;
                                value: volume * 100;
                                enabled: !is_muted;

                                changed => { volume_changed(self.value / 100); }
                            }

                            // Spacer
                            Rectangle { horizontal-stretch: 1; }

                            // Fullscreen
                            Rectangle {
                                width: 32px;
                                height: 32px;

                                TouchArea {
                                    width: 100%;
                                    height: 100%;
                                    clicked => { fullscreen_clicked(); }
                                    mouse-cursor: pointer;
                                }

                                Image {
                                    width: 100%;
                                    height: 100%;
                                    source: is_fullscreen
                                        ? @image-url("assets/minimize.svg")
                                        : @image-url("assets/fullscreen.svg");
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
